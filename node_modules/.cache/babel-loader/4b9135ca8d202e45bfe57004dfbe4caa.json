{"ast":null,"code":"var _jsxFileName = \"/home/umang/WORK_REPO/my-resume/src/components/table.jsx\";\nimport React from \"react\";\nimport \"./table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addRow = (rows, header) => {\n  const output = [];\n  console.log(rows[0]);\n\n  for (const [row, pos] in rows) {\n    console.log(\"aaaaaaaaaa\", row, pos); // adding rows\n\n    output.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", pos, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), header.map(val => /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", row[val], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 32\n      }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n        class: \"show-details\",\n        id: `${row[header[0]]}-show-details`,\n        children: \"[show details]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }, this)); //adding projects\n\n    row.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"extra\",\n        colSpan: \"3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: row.Projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", project, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 54\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }, this));\n  }\n\n  return output;\n};\n\nconst Table = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  id: props.title,\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: props.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), props.title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \" # \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), props.header.map(val => /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [\" \", val, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 38\n      }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), addRow(props.details, props.header)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 1\n}, this);\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/umang/WORK_REPO/my-resume/src/components/table.jsx"],"names":["React","addRow","rows","header","output","console","log","row","pos","push","map","val","Projects","project","Table","props","title","icon","details"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAO,aAAP;;;AAEA,MAAMC,MAAM,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7B,QAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAAC,CAAD,CAAhB;;AACA,OAAK,MAAM,CAACK,GAAD,EAAMC,GAAN,CAAX,IAAyBN,IAAzB,EAA+B;AAC3BG,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,GAA1B,EAA+BC,GAA/B,EAD2B,CAE5B;;AACCJ,IAAAA,MAAM,CAACK,IAAP,eAAY;AAAA,8BACR;AAAA,wBAAMD,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,EAEPL,MAAM,CAACO,GAAP,CAAWC,GAAG,iBAAI;AAAA,wBAAMJ,GAAG,CAACI,GAAD,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB,CAFO,eAGR;AAAI,QAAA,KAAK,EAAC,cAAV;AAAyB,QAAA,EAAE,EAAG,GAAEJ,GAAG,CAACJ,MAAM,CAAC,CAAD,CAAP,CAAY,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHQ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,EAH2B,CAU3B;;AACAI,IAAAA,GAAG,CAACE,IAAJ,eAAU;AAAA,6BACN;AAAI,QAAA,SAAS,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAC,GAA9B;AAAA,+BACG;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACK;AAAA,sBACKF,GAAG,CAACK,QAAJ,CAAaF,GAAb,CAAiBG,OAAO,iBAAI;AAAA,8BAAMA,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA5B;AADL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAAV;AASH;;AACD,SAAOT,MAAP;AACH,CAzBD;;AA6BA,MAAMU,KAAK,GAAIC,KAAD,iBACd;AAAK,EAAA,EAAE,EAAEA,KAAK,CAACC,KAAf;AAAA,0BACI;AAAA,4BACI;AAAG,MAAA,SAAS,EAAED,KAAK,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,KAAK,CAACC,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAKI;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKD,KAAK,CAACZ,MAAN,CAAaO,GAAb,CAAiBC,GAAG,iBAAI;AAAA,wBAAMA,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB,CAFL,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAQKV,MAAM,CAACc,KAAK,CAACG,OAAP,EAAgBH,KAAK,CAACZ,MAAtB,CARX;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;;KAAMW,K;AAmBN,eAAeA,KAAf","sourcesContent":["import React  from \"react\"\nimport \"./table.css\"\n\nconst addRow = (rows, header) => {\n    const output = [];\n    console.log(rows[0]);\n    for (const [row, pos] in rows) {\n        console.log(\"aaaaaaaaaa\", row, pos);\n       // adding rows\n        output.push(<tr>\n            <td> {pos} </td>\n            {header.map(val => <td> {row[val]} </td>)}\n            <td class=\"show-details\" id={`${row[header[0]]}-show-details`}>\n                [show details]\n            </td>\n        </tr>);\n        //adding projects\n        row.push( <tr>\n            <td className=\"extra\" colSpan=\"3\">\n               <div className=\"log\">\n                    <ul>\n                        {row.Projects.map(project => <li> {project} </li>)}\n                    </ul>\n                </div>\n             </td>\n        </tr>);\n    } \n    return output;    \n}\n\n\n\nconst Table = (props) => \n<div id={props.title}>\n    <h1>          \n        <i className={props.icon} />\n        {props.title} \n    </h1>\n    <table>\n        <tr>\n            <th> # </th>\n            {props.header.map(val => <th> {val} </th>)}\n            <th> </th>\n        </tr>\n        {\n       \n         addRow(props.details, props.header)   \n        }\n    </table>\n</div>\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}